
-- AML 8.3
-- aml_8.3_fdx_tables_postgre

--FSC_JOB_CALENDAR
CREATE TABLE CORE.FSC_JOB_CALENDAR 
(	JOB_CALENDAR_ID NUMERIC(5,0), 
	SEGMENT_ID VARCHAR(128),
	CALENDAR_DATE TIMESTAMP WITH TIME ZONE, 
	RUNDATE_IND CHAR(1), 
	DAILY_RUNDATE_IND CHAR(1), 
	WEEKLY_RUNDATE_IND CHAR(1), 
	MONTHLY_RUNDATE_IND CHAR(1), 
	STATUS_IND CHAR(1), 
	BUSINESS_DAY_COUNT NUMERIC(15,0),
	PRIMARY KEY(JOB_CALENDAR_ID)
);
CREATE INDEX XIE1FSC_JOB_CALENDAR ON
CORE.FSC_JOB_CALENDAR( CALENDAR_DATE );

ALTER TABLE CORE.FSC_JOB_CALENDAR OWNER TO dbmsowner;

--FSC_JOB
CREATE TABLE CORE.FSC_JOB 
(	JOB_ID NUMERIC(3,0),
	JOB_NAME VARCHAR(50), 
	JOB_DESC VARCHAR(255), 
	JOB_CAT VARCHAR(50), 
	JOB_INCLUDE NUMERIC(2,0),
	PRIMARY KEY(JOB_ID)
);

ALTER TABLE CORE.FSC_JOB OWNER TO dbmsowner;

--FSC_TYPE2_DIM_FACT
CREATE TABLE CORE.FSC_TYPE2_DIM_FACT
(
DIMENSION_TABLE CHARACTER VARYING(50),
DIMENSION_SK NUMERIC(11,0),
FIELD_NAME CHARACTER VARYING(45),
CHANGE_BEGIN_DATE TIMESTAMP WITH TIME ZONE
);

ALTER TABLE CORE.FSC_TYPE2_DIM_FACT OWNER TO dbmsowner;

--FSC_PROCESS
CREATE TABLE CORE.FSC_PROCESS (
    PROCESS_ID NUMERIC(16,0) NOT NULL,
    PROCESS_PARENT_ID NUMERIC(16,0),
    PROCESS_START_DT TIMESTAMP WITH TIME ZONE,
    PROCESS_END_DT TIMESTAMP WITH TIME ZONE,
    PROCESS_NOTES CHARACTER VARYING(255),
    PROCESS_STATUS CHARACTER VARYING(20),
    JOB_ID NUMERIC(3,0) NOT NULL,
    RUN_DATE NUMERIC(10,0)
);

ALTER TABLE CORE.FSC_PROCESS OWNER TO dbmsowner;

--FSC_PROCESS_METRIC
CREATE TABLE CORE.FSC_PROCESS_METRIC (
    METRIC_ID NUMERIC(16,0) NOT NULL,
    METRIC_NAME CHARACTER VARYING(50),
    METRIC_DESC CHARACTER VARYING(255),
    METRIC_VALUE NUMERIC(16,5),
    PROCESS_ID NUMERIC(16,0) NOT NULL
);

ALTER TABLE CORE.FSC_PROCESS_METRIC OWNER TO DBMSOWNER;

--FSC_SCD_COLUMNS
CREATE TABLE CORE.FSC_SCD_COLUMNS
(
SCD_TABLE CHARACTER VARYING(35) NOT NULL,
SCD_COLUMN CHARACTER VARYING(35) NOT NULL,
SCD_TYPE CHARACTER VARYING(5) NOT NULL,
ORDER_ID NUMERIC NOT NULL,
CONSTRAINT PK_SCD_COLUMN UNIQUE (SCD_TABLE, SCD_COLUMN)
)
WITH (
OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE CORE.FSC_SCD_COLUMNS OWNER TO dbmsowner;

--PSD_ETL_FATAL_ERRORS
CREATE TABLE CORE.PSD_ETL_FATAL_ERRORS
(
    RULE_FIRED_KEY NUMERIC(12,0),
    RULE_FIRED_DATE DATE,
    RULE_NAME CHARACTER VARYING(50),
    RULE_TYPE CHARACTER VARYING(25),
    RECORD_IDENTIFIER CHARACTER VARYING(50),
    CHAR_FIELD_VALUE CHARACTER VARYING(100),
    NUM_FIELD_VALUE NUMERIC(22,5),
    DATE_FIELD_VALUE DATE,
    RULE_FIRED_TEXT CHARACTER VARYING(100),
    ERROR_TYPE CHARACTER VARYING(25),
    RULE_FIELD CHARACTER VARYING(50),
    RUN_DT TIMESTAMP WITH TIME ZONE NOT NULL,
    JOB_ID NUMERIC NOT NULL,
    PROCESS_ID NUMERIC NOT NULL
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE CORE.PSD_ETL_FATAL_ERRORS OWNER to dbmsowner;

--FSC_DATE_DIM
CREATE TABLE CORE.FSC_DATE_DIM
(
	DATE_KEY             NUMERIC(8,0) NOT NULL ,
	CALENDAR_DATE        TIMESTAMP WITH TIME ZONE,
	CALENDAR_DATE_SAS    NUMERIC(8,0) NULL ,
	CALENDAR_DATE_DMY    CHAR(9) NULL ,
	DAY_NAME             VARCHAR(9) NULL ,
	DAY_NAME_SHORT       CHAR(3) NULL ,
	DAY_NUMBER_IN_MONTH  NUMERIC(2,0) NULL ,
	DAY_NUMBER_IN_YEAR   NUMERIC(3,0) NULL ,
	WEEK_NUMBER_IN_MONTH NUMERIC(1,0) NULL ,
	WEEK_NUMBER_IN_YEAR  NUMERIC(2,0) NULL ,
	MONTH_NUMBER_IN_YEAR NUMERIC(2,0) NULL ,
	MONTH_KEY            NUMERIC(6,0) NULL ,
	MONTH_AND_YEAR       CHAR(6) NULL ,
	MONTH_NAME           VARCHAR(9) NULL ,
	MONTH_NAME_SHORT     CHAR(3) NULL ,
	QUARTER_NAME         CHAR(4) NULL ,
	QUARTER_AND_YEAR     CHAR(6) NULL ,
	MONTH_NAME_3C        CHAR(3) NULL ,
	QUARTER_NAME_2C      CHAR(2) NULL ,
	QUARTER_NAME_4C      CHAR(4) NULL ,
	YEAR_2C              CHAR(2) NULL ,
	YEAR_4C              CHAR(4) NULL ,
	HOLIDAY_IND          CHAR(1) NULL ,
	HOLIDAY_NAME         CHAR(9) NULL ,
	WEEK_DAY_IND         CHAR(1) NULL ,
	END_OF_MONTH_IND     CHAR(1) NULL ,
	ECONOMIC_RELEASE_DESC VARCHAR(20) NULL ,
	ECONOMIC_EVENT_DESC  VARCHAR(20) NULL,
	PRIMARY KEY(DATE_KEY)
);
CREATE INDEX XIE1FSC_DATE_DIM ON
core.FSC_DATE_DIM( CALENDAR_DATE );

ALTER TABLE CORE.FSC_DATE_DIM OWNER to dbmsowner;

--FSC_TIME_DIM
CREATE TABLE CORE.FSC_TIME_DIM
(
	TIME_KEY             NUMERIC(6) NOT NULL ,
	TIME_HHMMSS          CHAR(6) NULL ,
	TIME_HH              CHAR(2) NULL ,
	TIME_MM              CHAR(2) NULL ,
	TIME_SS              CHAR(2) NULL ,
	TIME_AM_PM           CHAR(2) NULL,
	PRIMARY KEY(TIME_KEY)
);

ALTER TABLE CORE.FSC_TIME_DIM OWNER to dbmsowner;

-- FSC_CURRENCY_DIM
CREATE TABLE CORE.FSC_CURRENCY_DIM
(
	CURRENCY_KEY         NUMERIC(5,0) NOT NULL ,
	CURRENCY_CODE        CHAR(3) NULL ,
	CURRENCY_NAME        VARCHAR(100) NULL,
	PRIMARY KEY(CURRENCY_KEY)
);

ALTER TABLE CORE.FSC_CURRENCY_DIM OWNER to dbmsowner;

-- FSC_MONTH_DIM
CREATE TABLE CORE.FSC_MONTH_DIM
(
	MONTH_KEY            NUMERIC(6,0) NOT NULL ,
	MONTH_AND_YEAR       CHAR(6) NULL ,
	MONTH_NAME           VARCHAR(9) NULL ,
	MONTH_NAME_3C        CHAR(3) NULL ,
	QUARTER_NAME_2C      CHAR(2) NULL ,
	QUARTER_NAME_4C      CHAR(4) NULL ,
	YEAR_2C              CHAR(2) NULL ,
	YEAR_4C              CHAR(4) NULL ,
	CURRENT_MONTH_IND    CHAR(1) NULL,
	PRIMARY KEY(MONTH_KEY)
);

ALTER TABLE CORE.FSC_MONTH_DIM OWNER to dbmsowner;

-- SEQUENCE: CORE.PROCESS_ID
CREATE SEQUENCE CORE.PROCESS_ID
INCREMENT 1
START 105
MINVALUE 1
MAXVALUE 9223372036854775807
CACHE 1;

ALTER SEQUENCE CORE.PROCESS_ID OWNER TO dbmsowner;

-- SEQUENCE: CORE.METRIC_ID
CREATE SEQUENCE CORE.METRIC_ID
INCREMENT 1
START 189
MINVALUE 1
MAXVALUE 9223372036854775807
CACHE 1;

ALTER SEQUENCE CORE.METRIC_ID OWNER TO dbmsowner;

-- SEQUENCE: CORE.FSC_PROCESS_SEQUENCE
CREATE SEQUENCE CORE.FSC_PROCESS_SEQUENCE
INCREMENT 1
START 5
MINVALUE 1
MAXVALUE 9223372036854775807
CACHE 1;

ALTER SEQUENCE CORE.FSC_PROCESS_SEQUENCE OWNER TO dbmsowner;
